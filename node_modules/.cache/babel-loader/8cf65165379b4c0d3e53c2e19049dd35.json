{"ast":null,"code":"import _slicedToArray from\"/Users/huzaifa/Documents/GitHub/todoparchi/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import TodoForm from'./TodoForm';import{RiCloseCircleLine}from'react-icons/ri';import{TiEdit}from'react-icons/ti';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Todo=function Todo(_ref){var todos=_ref.todos,completeTodo=_ref.completeTodo,removeTodo=_ref.removeTodo,updateTodo=_ref.updateTodo;var _useState=useState({id:null,value:''}),_useState2=_slicedToArray(_useState,2),edit=_useState2[0],setEdit=_useState2[1];var submitUpdate=function submitUpdate(value){updateTodo(edit.id,value);setEdit({id:null,value:''});};if(edit.id){return/*#__PURE__*/_jsx(TodoForm,{edit:edit,onSubmit:submitUpdate});}return todos.map(function(todo,index){return/*#__PURE__*/_jsx(\"div\",{className:todo.isComplete?'todo-row complete ':'todo-row',children:/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"row d-flex justify-content-between\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-auto\",onClick:function onClick(){return completeTodo(todo.id);},children:todo.text},todo.id),/*#__PURE__*/_jsxs(\"div\",{className:\"icons col-auto\",children:[/*#__PURE__*/_jsx(RiCloseCircleLine,{onClick:function onClick(){return removeTodo(todo.id);},className:\"delete-icon\"}),/*#__PURE__*/_jsx(TiEdit,{onClick:function onClick(){return setEdit({id:todo.id,value:todo.text});},className:\"edit-icon\"})]})]})})},index);});};export default Todo;","map":{"version":3,"sources":["/Users/huzaifa/Documents/GitHub/todoparchi/src/components/Todo.js"],"names":["React","useState","TodoForm","RiCloseCircleLine","TiEdit","Todo","todos","completeTodo","removeTodo","updateTodo","id","value","edit","setEdit","submitUpdate","map","todo","index","isComplete","text"],"mappings":"6HAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,OAASC,iBAAT,KAAkC,gBAAlC,CACA,OAASC,MAAT,KAAuB,gBAAvB,C,wFAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,MAAqD,IAAlDC,CAAAA,KAAkD,MAAlDA,KAAkD,CAA3CC,YAA2C,MAA3CA,YAA2C,CAA7BC,UAA6B,MAA7BA,UAA6B,CAAjBC,UAAiB,MAAjBA,UAAiB,CAC9D,cAAwBR,QAAQ,CAAC,CAC7BS,EAAE,CAAE,IADyB,CAE7BC,KAAK,CAAE,EAFsB,CAAD,CAAhC,wCAAOC,IAAP,eAAaC,OAAb,eAKA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAH,KAAK,CAAI,CAC1BF,UAAU,CAACG,IAAI,CAACF,EAAN,CAAUC,KAAV,CAAV,CACAE,OAAO,CAAC,CACJH,EAAE,CAAE,IADA,CAEJC,KAAK,CAAE,EAFH,CAAD,CAAP,CAIH,CAND,CAQA,GAAIC,IAAI,CAACF,EAAT,CAAa,CACT,mBAAO,KAAC,QAAD,EAAU,IAAI,CAAEE,IAAhB,CAAsB,QAAQ,CAAEE,YAAhC,EAAP,CACH,CAED,MAAOR,CAAAA,KAAK,CAACS,GAAN,CAAU,SAACC,IAAD,CAAOC,KAAP,qBACb,YACI,SAAS,CAAED,IAAI,CAACE,UAAL,CAAkB,oBAAlB,CAAyC,UADxD,uBAII,YAAK,SAAS,CAAC,WAAf,uBACI,aAAK,SAAS,CAAC,oCAAf,wBACI,YAAmB,SAAS,CAAC,UAA7B,CAAwC,OAAO,CAAE,yBAAMX,CAAAA,YAAY,CAACS,IAAI,CAACN,EAAN,CAAlB,EAAjD,UACKM,IAAI,CAACG,IADV,EAAUH,IAAI,CAACN,EAAf,CADJ,cAII,aAAK,SAAS,CAAC,gBAAf,wBACI,KAAC,iBAAD,EACI,OAAO,CAAE,yBAAMF,CAAAA,UAAU,CAACQ,IAAI,CAACN,EAAN,CAAhB,EADb,CAEI,SAAS,CAAC,aAFd,EADJ,cAKI,KAAC,MAAD,EACI,OAAO,CAAE,yBAAMG,CAAAA,OAAO,CAAC,CAAEH,EAAE,CAAEM,IAAI,CAACN,EAAX,CAAeC,KAAK,CAAEK,IAAI,CAACG,IAA3B,CAAD,CAAb,EADb,CAEI,SAAS,CAAC,WAFd,EALJ,GAJJ,GADJ,EAJJ,EAESF,KAFT,CADa,EAAV,CAAP,CAwBH,CA1CD,CA4CA,cAAeZ,CAAAA,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\n\nconst Todo = ({ todos, completeTodo, removeTodo, updateTodo }) => {\n    const [edit, setEdit] = useState({\n        id: null,\n        value: ''\n    });\n\n    const submitUpdate = value => {\n        updateTodo(edit.id, value);\n        setEdit({\n            id: null,\n            value: ''\n        });\n    };\n\n    if (edit.id) {\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />;\n    }\n\n    return todos.map((todo, index) => (\n        <div\n            className={todo.isComplete ? 'todo-row complete ' : 'todo-row'}\n            key={index}\n        >\n            <div className=\"container\">\n                <div className=\"row d-flex justify-content-between\">\n                    <div key={todo.id} className=\"col-auto\" onClick={() => completeTodo(todo.id)}>\n                        {todo.text}\n                    </div>\n                    <div className='icons col-auto'>\n                        <RiCloseCircleLine\n                            onClick={() => removeTodo(todo.id)}\n                            className='delete-icon'\n                        />\n                        <TiEdit\n                            onClick={() => setEdit({ id: todo.id, value: todo.text })}\n                            className='edit-icon'\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    ));\n};\n\nexport default Todo;"]},"metadata":{},"sourceType":"module"}